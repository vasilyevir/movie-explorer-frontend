{"version":3,"sources":["components/Header/Header.js","components/Footer/Footer.js","images/Avatar.jpeg","images/arrow.svg","components/Main/Main.js","images/logo.svg","components/UseForm/UseForm.js","components/Login/Login.js","components/Register/Register.js","contexts/CurrentMoviesContext.js","components/Card/Card.js","components/MoviesList/MoviesList.js","images/account.svg","components/Movies/Movies.js","contexts/CurrentUserContext.js","components/Profile/Profile.js","components/NotFounded/NotFounded.js","components/SavedMovies/SavedMovies.js","utils/MainApi.js","utils/MoviesApi.js","components/ProtectedRoute/ProtectedRoute.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","header","children","Footer","href","Main","to","loggedIn","id","name","src","Avatar","alt","Arrow","useForm","React","useState","values","setValues","handleChange","event","target","value","useFormWithValidation","errors","setErrors","isValid","setIsValid","resetForm","useCallback","newValues","newErrors","newIsValid","validationMessage","closest","checkValidity","Login","formData","checkForm","e","Logo","onSubmit","preventDefault","onLogin","required","type","onChange","email","minLength","password","message","Register","onRegister","maxLength","CurrentMoviesContext","createContext","Card","movieShow","savedMovies","nameFilm","shortFilm","films","isSearched","isLiked","show","handleCardDeleteLike","deleteLike","_id","trailer","image","nameRU","onClick","like","catch","err","console","log","duration","MoviesList","useContext","currentMovies","map","item","cardLike","Movies","setCurrentMovies","quantityFilmsOnPage","quantityAddCardOnPage","increaseQuantity","setNameFilm","setShortFilm","userData","setUserData","handleMenuButtonClick","isOpen","closeAllPopups","filterMovie","placeholder","checked","removeButton","state","film","movieId","checkShowCard","CurrentUserContext","Profile","currentUser","data","useFormWithValidationProfile","emailChanged","update","signOut","NotFounded","SavedMovies","submitForm","api","this","_address","address","fetch","headers","authorization","localStorage","getItem","then","res","ok","json","Promise","reject","status","obj","method","body","JSON","stringify","country","director","year","description","nameEN","thumbnail","moviesId","getContent","checkResponse","statusText","ProtectedRoute","Component","component","App","setCurrentUser","setLoggedIn","setQuantityFilmsOnPage","setQuantityAddCardOnPage","setIsOpen","setRemoveButton","setMessage","addCard","array","num","determiningQuantityCard","windowInnerWidth","window","innerWidth","onresize","setTimeout","createArrayMovies","movie","url","trailerLink","formats","forEach","isPopupOpen","history","useHistory","useEffect","push","getMovies","savedMoviesList","MoviesApi","moviesList","i","length","tokenCheck","getInformation","handleMovieDeleteLike","cardId","deleteMovies","newCard","movies","movieQuantity","handleFilterButtonClick","str","toUpperCase","filmName","indexOf","Provider","exact","path","authorize","Error","token","setItem","checkLoginError","register","statusCode","checkRegisterError","card","postMovies","c","removeItem","infoUser","changeProfile","checkUpdateProfileError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cdaa3639.chunk.js","sourcesContent":["import './Header.css';\n\nfunction Header(props) {\n    \n    return (\n        <div className={props.header === true ? 'header' : 'header header_movie'}>\n            <div className=\"logo\"></div>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Header;\n","import './Footer.css';\n\nfunction Footer() {\n    \n    return (\n        <div className=\"footer\">\n            <h2 className=\"footer__header\"> Учебный проект Яндекс.Практикум х BeatFilm. </h2>\n            <div className=\"footer__container\">\n                <p className=\"footer__links\">© 2020</p>\n                <div className=\"footer__container-links\">\n                    <a href=\"https://praktikum.yandex.ru/profile/web/\" className=\"footer__links\">Яндекс.Практикум</a>\n                    <a href=\"https://github.com/vasilyevir\" className=\"footer__links\">Github</a>\n                    <a href=\"https://vk.com/vas.il400mh\" className=\"footer__links\">Vkontakte</a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/Avatar.044f0245.jpeg\";","export default __webpack_public_path__ + \"static/media/arrow.2f133fb2.svg\";","import Header from '../Header/Header';\nimport Footer from '../Footer/Footer';\nimport './Main.css'\nimport {Link} from 'react-router-dom';\nimport Avatar from '../../images/Avatar.jpeg';\nimport Arrow from '../../images/arrow.svg'\n\nfunction Main(props) {\n    \n    return (\n        <>\n            <div className=\"mainpage\">\n                <Header\n                    header = {true}\n                >\n                    <div className=\"header__nav-bar\">\n                        <Link className=\"header__register\" to={props.loggedIn ? '/signup' : '/movies'}>Регистрация</Link>\n                        <Link className=\"header__login\" to={ props.loggedIn ? '/signin' : '/movies'}>Войти</Link>\n                    </div>\n                </Header>\n                <div className=\"mainpage__landing\">\n                    <div className=\"mainpage__landing-image\"></div>\n                    <h1 className=\"mainpage__landing-heading\">Учебный проект студента факультета Веб-разработки.</h1>\n                </div>\n            </div>\n            <div className=\"navbar\">\n                <div className=\"navbar__links\">\n                    <Link to=\"#about\" className=\"navbar__link\">О проекте</Link>\n                    <Link to=\"#technology\" className=\"navbar__link\">Технологии</Link>\n                    <Link to=\"#student\" className=\"navbar__link\">Студент</Link>\n                </div>\n            </div>\n            <div id=\"about\" className=\"about\">\n                <h2 className=\"about__head\">О проекте</h2>\n                <div className=\"about__info\">\n                    <div className=\"about__heading\">Дипломный проект включал 5 этапов</div>\n                    <div className=\"about__paragraphs\">Составление плана, работу над бэкендом, вёрстку, добавление функциональности и финальные доработки.</div>\n                    <div className=\"about__heading\">На выполнение диплома ушло 5 недель</div>\n                    <div className=\"about__paragraphs\">У каждого этапа был мягкий и жёсткий дедлайн, которые нужно было соблюдать, чтобы успешно защититься.</div>\n                </div>\n                <div className=\"about__time\">\n                    <div className=\"about__time-line\">1 неделя</div>\n                    <div className=\"about__time-line about__time-line_grey\">4 недели</div>\n                    <div className=\"about__time-text\">Back-end</div>\n                    <div className=\"about__time-text\">Front-end</div>\n                </div>\n            </div>\n            <div id=\"technology\" className=\"technology\">\n                <div className=\"technology__container\">    \n                    <h2 className=\"technology__head\">Технологии</h2>\n                    <div className=\"technology__info\">\n                        <h3 className=\"technology__header\">7 технологий</h3>\n                        <p className=\"technology__paragraph\">На курсе веб-разработки мы освоили технологии, которые применили в дипломном проекте.</p>\n                        <div className=\"technology__row\">\n                            <div className=\"technology__lang\">HTML</div>\n                            <div className=\"technology__lang\">CSS</div>\n                            <div className=\"technology__lang\">JS</div>\n                            <div className=\"technology__lang\">React</div>\n                            <div className=\"technology__lang\">Git</div>\n                            <div className=\"technology__lang\">Express.js</div>\n                            <div className=\"technology__lang\">mongoDB</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div name=\"student\" className=\"student\">\n                <h2 className=\"student__head\">Студент</h2>\n                <div className=\"student__container\">\n                    <img src={Avatar} alt=\"Аватар\" className=\"student__avatar\"/>\n                    <h2 className=\"student__heading\">Илья</h2>\n                    <h3 className=\"student__profile\">Фронтенд-разработчик, 20 лет</h3>\n                    <p className=\"student__about-me\">Я родился и живу в Санкт-Петербурге, учусь на робототехнике и мехатронике в СПбПУ. Занимался легкой атлетикой и добился там серьзных результатов, несколько раз был призером первенства России. Недавно начал кодить. После того, как прошёл курс по веб-разработке, хочу добиться высоких результатов и в данной сфере.</p>\n                    <a href=\"https://vk.com/vas.il400mh\" className=\"student__link\">Vkontakte</a>\n                    <a href=\"https://github.com/vasilyevir\" className=\"student__link\">Github</a>\n                </div>\n                <div className=\"student__portfolio\">\n                    <h3 className=\"student__profile student__profile_portfolio\">Портфолио</h3>\n                    <a href=\"https://github.com/vasilyevir/how-to-learn/blob/master/index.html\" className=\"student__block-site\">\n                        <p className=\"student__text-site\">Статичный сайт</p>\n                        <img src={Arrow} alt=\"Стрелка\" className=\"student__arrow\"/>\n                    </a>\n                    <a href=\"https://github.com/vasilyevir/russian-travel\" className=\"student__block-site\">\n                        <p className=\"student__text-site\">Адаптивный сайт</p>\n                        <img src={Arrow} alt=\"Стрелка\" className=\"student__arrow\"/>\n                    </a>\n                    <a href=\"https://github.com/vasilyevir/react-mesto-api-full\" className=\"student__block-site\">\n                        <p className=\"student__text-site\">Одностраничное приложение</p>\n                        <img src={Arrow} alt=\"Стрелка\" className=\"student__arrow\"/>\n                    </a>\n                </div>\n            </div>\n            <Footer/>\n        </>\n    )\n}\n\nexport default Main;\n","export default __webpack_public_path__ + \"static/media/logo.e8d6d3e1.svg\";","import React, { useCallback } from \"react\";\n\n//хук управления формой\nexport const useForm = () => {\n  const [values, setValues] = React.useState({});\n\n  const handleChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    setValues({...values, [name]: value});\n  };\n\n  return {values, handleChange, setValues};\n}\n\n//хук управления формой и валидации формы\nexport function useFormWithValidation() {\n  const [values, setValues] = React.useState({});\n  const [errors, setErrors] = React.useState({});\n  const [isValid, setIsValid] = React.useState(false);\n\n  const handleChange = (event) => {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n    setValues({...values, [name]: value});\n    setErrors({...errors, [name]: target.validationMessage });\n    setIsValid(target.closest(\"form\").checkValidity());\n  };\n\n  const resetForm = useCallback(\n    (newValues = {}, newErrors = {}, newIsValid = false) => {\n      setValues(newValues);\n      setErrors(newErrors);\n      setIsValid(newIsValid);\n    },\n    [setValues, setErrors, setIsValid]\n  );\n\n  return { values, handleChange, errors, isValid, resetForm };\n}\n\nexport function useFormWithValidationProfile(data) {\n    const [values, setValues] = React.useState(data);\n    const [errors, setErrors] = React.useState({});\n    const [isValid, setIsValid] = React.useState(false);\n  \n    const handleChange = (event) => {\n      const target = event.target;\n      const name = target.name;\n      const value = target.value;\n      setValues({...values, [name]: value});\n      setErrors({...errors, [name]: target.validationMessage });\n      setIsValid(target.closest(\"form\").checkValidity());\n    };\n  \n    const resetForm = useCallback(\n      (newValues = {}, newErrors = {}, newIsValid = false) => {\n        setValues(newValues);\n        setErrors(newErrors);\n        setIsValid(newIsValid);\n      },\n      [setValues, setErrors, setIsValid]\n    );\n  \n    return { values, handleChange, errors, isValid, resetForm };\n  }","import {Link} from 'react-router-dom';\nimport Logo from '../../images/logo.svg';\n// import {useState} from 'react';\nimport {useForm, useFormWithValidation} from '../UseForm/UseForm';\nimport './Login.css'\n\nfunction Login(props) {\n\n    // const [userData, setUserData] = useState({\n    //     email: '',\n    //     password: ''\n    //   })\n    // const [message, setMessage] = useState('');\n\n    const formData = useForm();\n    const checkForm = useFormWithValidation();\n\n    const handleChange = (e) => {\n        formData.handleChange(e);\n        checkForm.handleChange(e);\n    }\n\n    const handleSubmit = (e) => {\n        // console.log(userData)\n        e.preventDefault();\n        props.onLogin(formData.values)\n        // .catch(err => setMessage(err.message || 'Что-то пошло не так'));\n    }\n\n    return (\n        <section className='login'>\n            <Link to='/'>\n                <img src={Logo} alt=\"Аватар\" className=\"login__logo\"/>\n            </Link>\n            <h1 className='login__head'>Рады видеть!</h1>\n            <form className=\"login__form\" onSubmit={handleSubmit}>\n                <div className=\"login__constructor\">\n                    <p className=\"login__signature\">E-mail</p>\n                    <input required type=\"email\" className=\"login__input\" id=\"name\" onChange={handleChange} value={formData.values.email} name=\"email\"/>\n                    <span id=\"name-error\" className=\"login__error\">{checkForm.errors.email}</span>\n                </div>\n                <div className=\"login__constructor\">\n                    <p className=\"login__signature\">Пароль</p>\n                    <input type=\"password\" minLength=\"8\" className=\"login__input\" id=\"name\" onChange={handleChange} value={formData.values.password} name=\"password\"/>\n                    <span id=\"name-error\" className=\"login__error\">{checkForm.errors.password}</span>\n                </div>\n                <p className=\"login__error\">{props.message}</p>\n                <button className=\"login__button login__button_register\">Войти</button>\n            </form>\n            <p className=\"login__question\">\n                Ещё не зарегистрированы? <Link className=\"login__redirection\" to='/signup'>Регистрация</Link>\n            </p>\n        </section>\n    )\n}\n\nexport default Login;\n","import {Link} from 'react-router-dom';\nimport Logo from '../../images/logo.svg'\nimport {useState} from 'react';\nimport './Register.css'\nimport {useForm, useFormWithValidation} from '../UseForm/UseForm';\n\nfunction Register(props) {\n    const formData = useForm();\n    const checkForm = useFormWithValidation();\n    \n    const handleChange = (e) => {\n        formData.handleChange(e);\n        checkForm.handleChange(e);\n    }\n\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        props.onRegister(formData.values)\n    }  \n\n    return (\n        <section className='login'>\n            <Link to='/'>\n                <img src={Logo} alt=\"Аватар\" className=\"login__logo\"/>\n            </Link>\n            <h1 className='login__head'>Добро пожаловать!</h1>\n            <form className=\"login__form\" onSubmit={handleSubmit}>\n                <div className=\"login__constructor\">\n                    <p className=\"login__signature\">Имя</p>\n                    <input required minLength=\"2\" maxLength=\"40\" type=\"text\" className=\"login__input\" id=\"name\" value={formData.values.name} onChange={handleChange} name=\"name\"/>\n                    <span id=\"name-error\" className=\"login__error\">{checkForm.errors.name}</span>\n                </div>\n                <div className=\"login__constructor\">\n                    <p className=\"login__signature\">E-mail</p>\n                    <input required minLength=\"2\" maxLength=\"40\" type=\"email\" className=\"login__input\" id=\"email\" value={formData.values.email} onChange={handleChange} name=\"email\"/>\n                    <span id=\"name-error\" className=\"login__error\">{checkForm.errors.email}</span>\n                </div>\n                <div className=\"login__constructor\">\n                    <p className=\"login__signature\">Пароль</p>\n                    <input required minLength=\"8\" type=\"password\" className=\"login__input\" id=\"password\" value={formData.values.password} onChange={handleChange} name=\"password\"/>\n                    <span id=\"name-error\" className=\"login__error\">{checkForm.errors.password}</span>\n                </div>\n                <p className=\"login__error\">{props.message}</p>\n                <button className=\"login__button\">Зарегистрироваться</button>\n            </form>\n            <p className=\"login__question\">\n                Уже зарегистрированы? <Link className=\"login__redirection\" to='/signin'>Войти</Link>\n            </p>\n        </section>\n    )\n}\n\nexport default Register;\n","import {createContext} from 'react';\n\nconst CurrentMoviesContext = createContext();\n\nexport default CurrentMoviesContext","import { Link } from 'react-router-dom';\nimport './Card.css';\n\n\nfunction Card(props) {\n    // const movieShow = props.savedMovies ? true : !props.nameFilm ? !props.shortFilm ? true : props.films.isSearched ? true : false : false ;\n    let movieShow;\n    if (props.savedMovies){\n        //сохраненные фильмы\n        if (props.nameFilm){\n            //задан поиск\n            if (props.shortFilm) {\n                //задан\n                if (props.films.isSearched){\n                    // найден\n                    if (props.films.isLiked){\n                        movieShow = true;\n                    } else {\n                        movieShow = false;\n                    }\n                } else {\n                    if (props.films.isLiked){\n                        movieShow = true;\n                    } else {\n                        movieShow = false;\n                    }\n                }\n            } else {\n                if (props.films.isSearched){\n                    // найден\n                    if (props.films.isLiked){\n                        movieShow = true;\n                    } else {\n                        movieShow = false;\n                    }\n                } else {\n                    movieShow = false;\n                }\n            }\n        } else {\n            if (props.shortFilm) {\n                //задан\n                if (props.films.isSearched){\n                    // найден\n                    if (props.films.isLiked){\n                        movieShow = true;\n                    } else {\n                        movieShow = false;\n                    }\n                } else {\n                    movieShow = false;\n                }\n            } else { \n                if (props.films.isLiked){\n                    movieShow = true;\n                } else {\n                    movieShow = false;\n                }\n            }\n        }\n    } else {\n        if (props.nameFilm){\n            //задан поиск\n            if (props.shortFilm) {\n                //задан\n                if (props.films.isSearched){\n                    // найден\n                    movieShow = true;\n                } else {\n                    movieShow = false;\n                }\n            } else {\n                if (props.films.isSearched){\n                    // найден\n                    movieShow = true;\n                } else {\n                    movieShow = false;\n                }\n            }\n        } else {\n            if (props.shortFilm) {\n                //задан\n                if (props.films.isSearched){\n                    // найден\n                    movieShow = true;\n                } else {\n                    movieShow = false;\n                }\n            } else {\n                if (props.films.show){\n                    movieShow = true;\n                } else {\n                    movieShow = false;\n                }\n            }\n        }\n    }\n\n    const handleCardLike = () => {\n        props.like(props.films)\n        .catch(err => console.log(err));\n    }\n\n    const handleCardDeleteLike = () => {\n        props.deleteLike(props.films._id)\n    }\n\n\n    return (\n        <div className={movieShow ? \"card\" : \"card card_invisible\"}>\n            <a href={props.films.trailer}>\n                <img src={props.films.image} alt={props.films.nameRU} className=\"card__image\"/>\n            </a>\n            <div className=\"card__underline\">\n                <p className=\"card__name\">{props.films.nameRU}</p>\n                { \n                    props.savedMovies ? ( <button onClick={handleCardDeleteLike} className=\"card__button-delete\"></button> ) :\n                    ( <button onClick={props.films.isLiked ? handleCardDeleteLike : handleCardLike} className={props.films.isLiked ? \"card__button-like card__button-like_is-liked\" : \"card__button-like\" }></button> )\n                }\n            </div>\n            <div className=\"card__constructor-time\">\n                <p className=\"card__film-length\">{props.films.duration}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;\n","import { useContext } from 'react';\nimport CurrentMoviesContext from '../../contexts/CurrentMoviesContext';\nimport Card from '../Card/Card';\n\nfunction MoviesList(props) {\n    const [currentMovies, setCurrentMovies] = useContext(CurrentMoviesContext);\n\n    return (\n        <section className=\"movies-cardlist\">\n            {currentMovies.map((item, id)=>(\n                <Card\n                    shortFilm={props.shortFilm}\n                    nameFilm={props.nameFilm}\n                    key = {id}\n                    films = {item}\n                    like = {props.cardLike}\n                    savedMovies = {false}\n                    deleteLike={props.deleteLike}\n                />\n            )\n            )}\n        </section>\n    )\n}\n\n\nexport default MoviesList;\n","export default __webpack_public_path__ + \"static/media/account.47401ce7.svg\";","import Header from '../Header/Header';\nimport Footer from '../Footer/Footer';\nimport MoviesList from '../MoviesList/MoviesList';\nimport './Movies.css'\nimport {Link} from 'react-router-dom';\nimport Avatar from '../../images/account.svg';\nimport {useState, useContext} from 'react';\nimport CurrentMoviesContext from '../../contexts/CurrentMoviesContext';\n\nfunction Movies(props) {\n    const [currentMovies, setCurrentMovies] = useContext(CurrentMoviesContext);\n    const quantityFilmsOnPage = props.quantityFilmsOnPage;\n    const quantityAddCardOnPage = props.quantityAddCardOnPage;\n    const increaseQuantity = props.increaseQuantity;\n    const [nameFilm, setNameFilm] = useState('');\n    const [shortFilm, setShortFilm] = useState(false);\n    const [userData, setUserData] = useState({\n        nameFilm: '',\n        shortFilm: false,\n      })\n    const [message, setMessage] = useState('');\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setUserData({\n            ...userData,\n            [name]: value\n        })\n    }\n\n    const checkShowCard = (film) => {\n        if (film.movieId <= quantityFilmsOnPage + quantityAddCardOnPage){\n          film.show = true\n        } else {\n          film.show = false\n        }\n        return film\n      }\n    \n      const addCardOnList = () => {\n        increaseQuantity();\n        setCurrentMovies(state => state.map(film => checkShowCard(film)))\n      }\n\n    const handleChangeCheckbox = (e) => {\n        console.log(e.target.value)\n        const { name } = e.target;\n        if(userData.shortFilm === true){\n            setUserData({\n                ...userData,\n                [name]: false\n            })\n            console.log(userData)\n        } else {\n            setUserData({\n                ...userData,\n                [name]: true\n            })\n        }\n\n    }\n\n    const handleSubmit = (e) => {\n        setNameFilm(userData.nameFilm);\n        setShortFilm(userData.shortFilm);\n        e.preventDefault();\n        props.filterMovie(userData.nameFilm, userData.shortFilm)\n    }\n\n    return (\n        <>\n            <Header>\n                <div className=\"header__nav-bar header__nav-bar_movies\">\n                    <div className=\"header__films-link\">\n                        <Link to='/movies' className=\"header__links\">Фильмы</Link>\n                        <Link to='/saved-movies' className=\"header__links\">Сохранённые фильмы</Link>\n                    </div>\n                    <Link to='/profile' className=\"header__account\">\n                        <p className=\"header__account-text\">Аккаунт</p>\n                        <div className=\"header__account-logo\">\n                            <img src={Avatar} alt='account logo' className=\"header__logo-man\"/>\n                        </div>\n                    </Link>\n                </div>\n                <button className=\"header__btn-popup\" onClick={props.handleMenuButtonClick}></button>\n                <section className={`popup ${props.isOpen && 'popup_is-opened'}`}>\n                    <div className=\"popup__window popup__window_type_form\"> \n                        <button\n                            onClick={props.closeAllPopups} \n                            className={`popup__btn-close`} \n                            type=\"button\"\n                        ></button>\n                        <div className=\"popup__list\" name=\"formEdit\">\n                            <div className=\"popup__nav-link\">\n                                <Link to='/' className=\"popup__links\">Главная</Link>\n                                <Link to='/movies' className=\"popup__links\">Фильмы</Link>\n                                <Link to='/saved-movies' className=\"popup__links\">Сохранённые фильмы</Link>\n                            </div>\n                            <Link to='/profile' className=\"header__account header__account_min-width\">\n                                <p className=\"header__account-text\">Аккаунт</p>\n                                <div className=\"header__account-logo\">\n                                    <img src={Avatar} alt='account logo' className=\"header__logo-man\"/>\n                                </div>\n                            </Link>\n                        </div>\n                    </div>\n                </section>\n            </Header>\n            <section className=\"search-form\">\n                <form className=\"search-form__form\" onSubmit={handleSubmit}>\n                    <div className=\"search-form__find-constructor\">\n                        <input placeholder=\"Фильм\" className=\"search-form__input\" onChange={handleChange} value={userData.nameFilm} name=\"nameFilm\"></input>\n                        <button className=\"search-form__button\">Найти</button>\n                    </div>\n                    <label className=\"search-form__label\">\n                        <input type=\"checkbox\" className=\"search-form__checkbox\" onChange={handleChangeCheckbox} checked={userData.shortFilm} name=\"shortFilm\"></input>\n                        <span className=\"search-form__checkbox-round\"></span>\n                        <span className=\"search-form__visible-checkbox\"></span>\n                        <span className=\"search-form__checkbox-text\">Короткометражки</span>\n                    </label>\n                </form>\n            </section>   \n            <MoviesList\n                deleteLike={props.deleteLike}\n                cardLike = {props.cardLike}\n                nameFilm={nameFilm}\n                shortFilm={shortFilm}\n            />\n            <button className={props.removeButton ? \"movies-cardlist__button movies-cardlist__button_invisible\" : \"movies-cardlist__button\"} onClick={addCardOnList}>Ещё</button>\n            <Footer/>\n        </>\n    )\n}\n\n\nexport default Movies;\n","import {createContext} from 'react';\n\nconst CurrentUserContext = createContext();\n\nexport default CurrentUserContext","import {Link} from 'react-router-dom';\nimport Header from '../Header/Header'\nimport Avatar from '../../images/account.svg'\nimport {useState, useContext} from 'react';\nimport {useFormWithValidationProfile} from '../UseForm/UseForm';\nimport './Profile.css'\nimport CurrentUserContext from '../../contexts/CurrentUserContext';\n\nfunction Profile(props) {\n    const currentUser = useContext(CurrentUserContext);\n    const checkForm = useFormWithValidationProfile(currentUser);\n\n    const handleChange = (e) => {\n        checkForm.handleChange(e);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const emailChanged = currentUser.email === checkForm.values ? false : true;\n        props.update(checkForm.values, emailChanged)\n    }\n    \n    return (\n            <>        \n                <Header>\n                    <div className=\"header__nav-bar header__nav-bar_movies\">\n                        <div className=\"header__films-link\">\n                            <Link to='/movies' className=\"header__links\">Фильмы</Link>\n                            <Link to='/saved-movies' className=\"header__links\">Сохранённые фильмы</Link>\n                        </div>\n                        <Link to='/profile' className=\"header__account\">\n                            <p className=\"header__account-text\">Аккаунт</p>\n                            <div className=\"header__account-logo\">\n                                <img src={Avatar} alt='account logo' className=\"header__logo-man\"/>\n                            </div>\n                        </Link>\n                    </div>\n                    <button className=\"header__btn-popup\" onClick={props.handleMenuButtonClick}></button>\n                    <section className={`popup ${props.isOpen && 'popup_is-opened'}`}>\n                    <div className=\"popup__window popup__window_type_form\"> \n                        <button\n                            onClick={props.closeAllPopups} \n                            className={`popup__btn-close`} \n                            type=\"button\"\n                        ></button>\n                        <div className=\"popup__list\">\n                            <div className=\"popup__nav-link\">\n                                <Link to='/' className=\"popup__links\">Главная</Link>\n                                <Link to='/movies' className=\"popup__links\">Фильмы</Link>\n                                <Link to='/saved-movies' className=\"popup__links\">Сохранённые фильмы</Link>\n                            </div>\n                            <Link to='/profile' className=\"header__account header__account_min-width\">\n                                <p className=\"header__account-text\">Аккаунт</p>\n                                <div className=\"header__account-logo\">\n                                    <img src={Avatar} alt='account logo' className=\"header__logo-man\"/>\n                                </div>\n                            </Link>\n                        </div>\n                    </div>\n                </section>\n                </Header>\n                <section className='profile'>\n                    <h1 className='profile__head'>Привет, Илья</h1>\n                    <form className=\"profile__form\" onSubmit={handleSubmit}>\n                        <div className=\"profile__constructor\">\n                            <p className=\"profile__signature\">Имя</p>\n                            <input required minLength=\"2\" maxLength=\"40\" type=\"text\" className=\"profile__input\" id=\"name\" onChange={handleChange} value={checkForm.values.name} name=\"name\"/>\n                        </div>\n                        <span id=\"name-error\" className=\"login__error\">{checkForm.errors.name}</span>\n                        <div className=\"profile__constructor\">\n                            <p className=\"profile__signature\">E-mail</p>\n                            <input required minLength=\"2\" maxLength=\"40\" type=\"email\" className=\"profile__input\" id=\"name\" onChange={handleChange} value={checkForm.values.email} name=\"email\"/>\n                        </div>\n                        <span id=\"name-error\" className=\"login__error\">{checkForm.errors.email}</span>\n                        <span id=\"name-error\" className=\"login__error\">{props.message}</span>\n                        <button className=\"profile__button profile__button_register\">Редактировать</button>\n                    </form>\n                    <button className=\"profile__redirection\" onClick={props.signOut} to='/signup'>Выйти из аккаунта</button>\n                </section>\n            </>\n    )\n}\n\nexport default Profile;\n","import { Link } from 'react-router-dom';\nimport './NotFounded.css';\n\n\nfunction NotFounded() {\n    \n    return (\n        <div className=\"not-founded\">\n            <h1 className=\"not-founded__head\">404</h1>\n            <p className=\"not-founded__paragraph\">Страница не найдена</p>\n            <Link to=\"/\" className=\"not-founded__button\">Назад</Link>\n        </div>\n    )\n}\n\nexport default NotFounded;\n","import Header from '../Header/Header';\nimport Footer from '../Footer/Footer';\nimport Card from '../Card/Card';\nimport './SavedMovies.css'\nimport {Link} from 'react-router-dom';\nimport Avatar from '../../images/account.svg';\nimport {useContext, useState} from 'react';\nimport CurrentMoviesContext from '../../contexts/CurrentMoviesContext';\n\nfunction SavedMovies(props) {\n\n    const [currentMovies, setCurrentMovies] = useContext(CurrentMoviesContext);\n    const [nameFilm, setNameFilm] = useState('');\n    const [shortFilm, setShortFilm] = useState(false);\n    const [userData, setUserData] = useState({\n        nameFilm: '',\n        shortFilm: false,\n      })\n    const [message, setMessage] = useState('');\n\n\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setUserData({\n            ...userData,\n            [name]: value\n        })\n    }\n\n    const handleChangeCheckbox = (e) => {\n        console.log(e.target.value)\n        const { name } = e.target;\n        if(userData.shortFilm === true){\n            setUserData({\n                ...userData,\n                [name]: false\n            })\n            console.log(userData)\n        } else {\n            setUserData({\n                ...userData,\n                [name]: true\n            })\n        }\n\n    }\n\n    const handleSubmit = (e) => {\n        setNameFilm(userData.nameFilm);\n        setShortFilm(userData.shortFilm);\n        e.preventDefault();\n        props.filterMovie(userData.nameFilm, userData.shortFilm)\n    }\n\n\n    return (\n        <>\n            <Header>\n                <div className=\"header__nav-bar header__nav-bar_movies\">\n                    <div className=\"header__films-link\">\n                        <Link to='/movies' className=\"header__links\">Фильмы</Link>\n                        <Link to='/saved-movies' className=\"header__links\">Сохранённые фильмы</Link>\n                    </div>\n                    <Link to='/profile' className=\"header__account\">\n                        <p className=\"header__account-text\">Аккаунт</p>\n                        <div className=\"header__account-logo\">\n                            <img src={Avatar} alt='account logo' className=\"header__logo-man\"/>\n                        </div>\n                    </Link>\n                </div>\n                <button className=\"header__btn-popup\" onClick={props.handleMenuButtonClick}></button>\n                <section className={`popup ${props.isOpen && 'popup_is-opened'}`}>\n                    <div className=\"popup__window popup__window_type_form\"> \n                        <button\n                            onClick={props.closeAllPopups} \n                            className={`popup__btn-close`} \n                            type=\"button\"\n                        ></button>\n                        <form className={`popup__list`} onSubmit={props.submitForm} name=\"formEdit\">\n                            <div className=\"popup__nav-link\">\n                                <Link to='/' className=\"popup__links\">Главная</Link>\n                                <Link to='/movies' className=\"popup__links\">Фильмы</Link>\n                                <Link to='/saved-movies' className=\"popup__links\">Сохранённые фильмы</Link>\n                            </div>\n                            <Link to='/profile' className=\"header__account\">\n                                <p className=\"header__account-text\">Аккаунт</p>\n                                <div className=\"header__account-logo\">\n                                    <img src={Avatar} alt='account logo' className=\"header__logo-man\"/>\n                                </div>\n                            </Link>\n                        </form>\n                    </div>\n                </section>\n            </Header>\n            <section className=\"search-form\">\n                <form className=\"search-form__form\" onSubmit={handleSubmit}>\n                    <div className=\"search-form__find-constructor\">\n                        <input placeholder=\"Фильм\" className=\"search-form__input\" onChange={handleChange} value={userData.nameFilm} name=\"nameFilm\"></input>\n                        <button className=\"search-form__button\">Найти</button>\n                    </div>\n                    <label className=\"search-form__label\">\n                        <input type=\"checkbox\" className=\"search-form__checkbox\" onChange={handleChangeCheckbox} checked={userData.shortFilm} name=\"shortFilm\"></input>\n                        <span className=\"search-form__checkbox-round\"></span>\n                        <span className=\"search-form__visible-checkbox\"></span>\n                        <span className=\"search-form__checkbox-text\">Короткометражки</span>\n                    </label>\n                </form>\n            </section>   \n            <section className=\"movies-cardlist\">\n                {currentMovies.map((item, id)=>(\n                    <Card\n                        key = {id}\n                        films = {item}\n                        deleteLike={props.deleteLike}\n                        savedMovies={true}\n                        nameFilm={nameFilm}\n                        shortFilm={shortFilm}\n                    />\n                )\n                )}\n            </section>\n            <Footer/>\n        </>\n    )\n}\n\nexport default SavedMovies;\n","class Api{\n    constructor(data){\n        this._address = data.address;\n    }\n    \n    getInformation(){\n        return fetch(`${this._address}/users/me`, {\n            headers: {\n                authorization : `Bearer ${localStorage.getItem('token')}`\n            }\n        })\n        .then((res) => {\n            if (res.ok){\n                return res.json();\n            }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n        });\n    }\n\n    getMovies(){\n        return fetch(`${this._address}/movies`,{\n            headers: {\n                authorization : `Bearer ${localStorage.getItem('token')}`\n            }\n        })\n        .then((res) => {\n            if (res.ok){\n                return res.json();\n            }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n        })\n    }\n\n    changeProfile(obj){\n        console.log(obj)\n        return fetch(`${this._address}/users/me`,{\n            method: 'PATCH',\n            headers: {\n              authorization: `Bearer ${localStorage.getItem('token')}`,\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name: obj.name,\n                email: obj.email,\n                emailChanged: obj.emailChanged\n              })\n        })\n        .then((res) => {\n            if (res.ok){\n                return res.json();\n            }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n        })\n    }\n\n    postMovies(obj){\n        console.log(obj)\n        return fetch(`${this._address}/movies`,{\n            method: 'POST',\n            headers: {\n                authorization : `Bearer ${localStorage.getItem('token')}`,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                country: obj.country,\n                director: obj.director,\n                duration: obj.duration,\n                year: obj.year,\n                description: obj.description,\n                image: obj.image,\n                trailer: obj.trailer,\n                nameRU: obj.nameRU,\n                nameEN: obj.nameEN,\n                thumbnail: obj.thumbnail,\n                movieId: obj.movieId,\n              }) \n        })\n        .then((res) => {\n            if (res.ok){\n                return res.json();\n            }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n        })\n    }\n\n    deleteMovies(moviesId){\n        return fetch(`${this._address}/movies/${moviesId}`,{\n            method: 'DELETE',\n            headers: {\n                authorization : `Bearer ${localStorage.getItem('token')}`\n            }\n        })\n        .then((res) => {\n            if (res.ok){\n                return res.json();\n            }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n        })\n    }\n\n    authorize(password, email){\n        return fetch(`${this._address}/signin`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                email,\n                password, \n            })\n        })\n        .then((res) => {\n            if (res.ok){\n                return res.json();\n            }\n        \n\n        return Promise.reject(`Ошибка: ${res.status}`);\n        })\n    }\n\n    register(name, email, password){\n        return fetch(`${this._address}/signup`,{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name,\n                email,\n                password\n              }) \n        })\n        .then((res) => {\n            if (res.ok){\n                return res.json();\n            }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n        })\n    }\n}\n\nconst config = {\n    address: `https://api.vasilyevir-movies.nomoredomains.icu`\n}\n\nconst api = new Api(config);\n\nexport default api;\n","export const BASE_URL = 'https://api.nomoreparties.co';\n\nexport const getContent = () => {\n    return fetch(`${BASE_URL}/beatfilm-movies`, {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    })\n    .then(checkResponse)\n};\n\nconst checkResponse = (res) => res.ok ? res.json() : Promise.reject(`Ошибка: ${res.statusText}`)","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ component: Component, ...props }) => {\n  return (\n    <Route>\n      {() =>\n        props.loggedIn ? <Component {...props} /> : <Redirect to=\"./signin\" />\n      }\n    </Route>\n  );\n};\n\nexport default ProtectedRoute;","import Main from '../Main/Main';\nimport Login from '../Login/Login';\nimport Register from '../Register/Register';\nimport Movies from '../Movies/Movies';\nimport Profile from '../Profile/Profile';\nimport NotFounded from '../NotFounded/NotFounded';\nimport SavedMovies from '../SavedMovies/SavedMovies';\nimport { Route, Switch, Redirect, useHistory} from 'react-router-dom';\nimport {useState, useEffect} from 'react';\nimport api from '../../utils/MainApi';\nimport * as MoviesApi from '../../utils/MoviesApi';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\nimport CurrentUserContext from '../../contexts/CurrentUserContext';\nimport CurrentMoviesContext from '../../contexts/CurrentMoviesContext';\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState({});\n  const [currentMovies, setCurrentMovies] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [quantityFilmsOnPage, setQuantityFilmsOnPage] = useState(0);\n  const [quantityAddCardOnPage, setQuantityAddCardOnPage] = useState(0);\n  const [isOpen, setIsOpen] = useState(false);\n  const [removeButton, setRemoveButton] = useState(false)\n  const [message, setMessage] = useState()\n\n  const checkShowCard = (film, num) => {\n    if (film.movieId <= num){\n      film.show = true\n    } else {\n      film.show = false\n    }\n    return film\n  }\n\n  const addCard = (array, num) => {\n    setCurrentMovies(() => array.map(film => checkShowCard(film, num)))\n  }\n  \n  const determiningQuantityCard = (array) => {\n    const windowInnerWidth = window.innerWidth\n      if (945 <= windowInnerWidth && 1267 > windowInnerWidth){\n        setQuantityFilmsOnPage(12);\n        setQuantityAddCardOnPage(3);\n        addCard(array, 12);\n      } else if (623 <= windowInnerWidth && 945 > windowInnerWidth) {\n        setQuantityFilmsOnPage(8);\n        setQuantityAddCardOnPage(2);\n        addCard(array, 8);\n      } else if (windowInnerWidth < 623) {\n        setQuantityFilmsOnPage(5);\n        setQuantityAddCardOnPage(1);\n        addCard(array, 5);\n      }else {\n        setQuantityFilmsOnPage(12);\n        setQuantityAddCardOnPage(4);\n        addCard(array, 12);\n      }\n  }\n\n\n  window.onresize = function() {\n    setTimeout(determiningQuantityCard(currentMovies, quantityFilmsOnPage), 10000)\n  };\n\n\n  // useEffect(()=>{\n  //   determiningQuantityCard();\n  // },[])\n\n  const createArrayMovies = (obj, array) => {\n    const movie = {};\n    movie.isLiked = false\n    movie.isSearched = false\n    movie.country = obj.country;\n    movie.director = obj.director;\n    movie.duration = obj.duration;\n    movie.year = obj.year;\n    movie.description = obj.description;\n    movie.image = 'https://api.nomoreparties.co' + obj.image.url;\n    movie.trailer = obj.trailerLink;\n    movie.nameRU = obj.nameRU;\n    movie.nameEN = obj.nameEN;\n    movie.thumbnail = 'https://api.nomoreparties.co' +  obj.image.formats.thumbnail.url;\n    movie.movieId = obj.id;\n    movie.movieId <= quantityFilmsOnPage ? movie.show = true : movie.show = false;\n    array.forEach( item => {\n      if (item.movieId === movie.movieId){\n        movie.isLiked = true\n        movie._id = item._id;\n      }\n    })\n    return movie;\n  }\n\n  const handleMenuButtonClick = () =>{        \n    isPopupOpen();\n  }\n\n  const isPopupOpen = () =>{\n    setIsOpen(true);\n  }\n\n  const checkLoginError = (err) => {\n    if (err === 'Ошибка: 401'){\n      setMessage('Вы ввели неправильный логин или пароль.');\n    } else {\n      setMessage('При авторизации произошла ошибка. Токен не передан или передан не в том формате');\n    }\n  }\n\n  const handleLogin = ({ password, email  }) => {\n    return api.authorize(password, email)\n      .then((data) => {\n        if (!data) throw new Error('Неверные имя пользователя или пароль')\n        if (data.token) {\n          setLoggedIn(true)\n          localStorage.setItem('token', data.token)\n          api.getMovies()\n            .then(data => {\n              const savedMoviesList = data.data\n              MoviesApi.getContent()\n                .then(data => {\n                  const moviesList = []\n                  for(let i=0; i<data.length; i++){\n                    moviesList[i] = createArrayMovies(data[i], savedMoviesList);\n                  }\n                  determiningQuantityCard(moviesList);\n                })\n                .catch((err)=>{console.log(err)})\n            })\n            .catch((err)=>{console.log(err)})\n\n          api.getInformation()\n            .then(data => {\n              setCurrentUser(data.data)\n            })\n            .catch((err)=>{console.log(err)})\n\n          return;\n        }\n      })\n      .catch((err) => \n          checkLoginError(err)\n        )\n  }\n\n  const checkRegisterError = (err) => {\n    if (err === 'Ошибка: 409'){\n      setMessage('Пользователь с таким email уже существует');\n    } else {\n      setMessage('При регистрации пользователя произошла ошибка.');\n    }\n  }\n\n  const handleRegister = ({ name, email, password  }) => {\n    return api.register( name, email, password)\n      .then((res) => {\n        if (!res || res.statusCode === 400) throw new Error('Что-то пошло не так');\n        history.push(\"/signin\");\n        return res;\n      })\n      .catch((err) => \n          checkRegisterError(err)\n        )\n  }\n\n  const history = useHistory();\n\n  useEffect(() => {\n    if (loggedIn) {\n      history.push(\"/movies\");\n    }\n  }, [loggedIn])\n\n  useEffect(()=>{\n    api.getMovies()\n    .then(data => {\n      const savedMoviesList = data.data\n      MoviesApi.getContent()\n        .then(item => {\n          const moviesList = []\n          for(let i=0; i<item.length; i++){\n            moviesList[i] = createArrayMovies(item[i], savedMoviesList);\n          }\n          determiningQuantityCard(moviesList);\n        })\n        .catch((err)=>{console.log(err)})\n    })\n    .catch((err)=>{console.log(err)})\n  }, [])\n\n  useEffect(() => {\n    tokenCheck()\n  }, [])\n\n\n  const signOut = () =>{\n    localStorage.removeItem('token');\n    history.push('/signin');\n    setLoggedIn(false);\n  }\n\n  const tokenCheck = () => {\n    if (localStorage.getItem('token')) {\n      let token = localStorage.getItem('token');\n      if (token){\n        setLoggedIn(true)\n      }\n      api.getInformation()\n        .then(data => {\n          setCurrentUser(data.data)\n        })\n        .catch((err)=>{console.log(err)})\n    }\n  }\n\n  const checkUpdateProfileError = (err) => {\n    if (err === 'Ошибка: 409'){\n      setMessage('Пользователь с таким email уже существует.');\n    } else {\n      setMessage('При обновлении профиля произошла ошибка.');\n    }\n  }\n\n  const updateProfile = (obj, emailChanged) => {\n    obj.emailChanged = emailChanged;\n    return api.changeProfile(obj)\n      .then(data =>{\n        setCurrentUser(data);\n      })\n    .catch(err => checkUpdateProfileError(err))\n  }\n \n  function handleMovieLike(card) {\n    return api.postMovies(card).then((newCard) => {\n    newCard.isLiked = true\n    newCard.isSearched = true\n    newCard.show = true\n    setCurrentMovies((state) => state.map((c) => c.movieId === card.movieId ? newCard : c));\n    })\n    .catch((err)=>{console.log(err)}) \n  }\n\n  function handleMovieDeleteLike(cardId) {\n    return api.deleteMovies(cardId).then((newCard) => {\n      console.log(newCard)\n      let movies=[]\n      for (let i =0 ;i<currentMovies.length; i++){\n        if (currentMovies[i].movieId === newCard.movieId){\n          movies[i] = newCard\n          movies[i].isLiked = false\n          movies[i].isSearched = true\n          movies[i].show = true\n        } else {\n          movies[i] = currentMovies[i]\n        }\n      }\n      setCurrentMovies(movies);\n    })\n    .catch((err)=>{console.log(err)}) \n  }\n\nconst increaseQuantityCheck = () => {\n  increaseQuantity()\n}\n\n  const increaseQuantity = () => {\n\n    if (currentMovies.length < quantityFilmsOnPage + quantityAddCardOnPage){\n      setRemoveButton(true);\n    }\n    const movieQuantity = quantityFilmsOnPage + quantityAddCardOnPage;\n    console.log(quantityFilmsOnPage, quantityAddCardOnPage)\n    setQuantityFilmsOnPage(movieQuantity);\n  }\n\n  const handleFilterButtonClick = (nameFilm, shortFilm) => {\n    const movie = []\n    let i = 0;\n    setCurrentMovies(movie => movie.map(film => film.isSearched = false))\n    currentMovies.forEach(film => {\n      if (shortFilm){\n        movie[i] = film;\n        if(film.duration < 41){\n          const str = film.nameRU.toUpperCase();\n          const filmName = nameFilm.toUpperCase();\n          if (str.indexOf(filmName) !== -1){\n            movie[i].isSearched = true;\n          }\n        }\n      } else {\n          const str = film.nameRU.toUpperCase();\n          const filmName = nameFilm.toUpperCase();\n          movie[i] = film;\n          if (str.indexOf(filmName) !== -1){\n            movie[i].isSearched = true;\n          }\n      }\n      i++;\n   })\n   setCurrentMovies(movie)\n  }\n\n  const closeAllPopups = () => {\n    setIsOpen(false);\n}\n\n  return (\n    <div className=\"root\">\n      <CurrentUserContext.Provider value={currentUser}>\n        <CurrentMoviesContext.Provider value={[currentMovies, setCurrentMovies]}>\n          <Switch>\n            <Route exact path='/'>\n              <Main/>\n            </Route>\n            <Route path='/signin'>\n              <Login\n                onLogin={handleLogin}\n                message={message}\n              />\n            </Route>\n            <Route path='/signup'>\n              <Register\n                onRegister={handleRegister}\n                message={message}\n              />\n            </Route>\n            <ProtectedRoute path='/movies'\n              component={Movies}\n              loggedIn={loggedIn}\n              moviesList={currentMovies}\n              cardLike={handleMovieLike}\n              deleteLike={handleMovieDeleteLike}\n              filterMovie={handleFilterButtonClick}\n              increaseQuantity={increaseQuantityCheck}\n              quantityFilmsOnPage = {quantityFilmsOnPage}\n              quantityAddCardOnPage={quantityAddCardOnPage}\n              removeButton={removeButton}\n              determiningQuantityCard={determiningQuantityCard}\n              closeAllPopups={closeAllPopups}\n              handleMenuButtonClick={handleMenuButtonClick}\n              isOpen={isOpen}\n            />\n            <ProtectedRoute path='/saved-movies'\n              component={SavedMovies}\n              loggedIn={loggedIn}\n              moviesList={currentMovies}\n              deleteLike={handleMovieDeleteLike}\n              filterMovie={handleFilterButtonClick}\n              closeAllPopups={closeAllPopups}\n              handleMenuButtonClick={handleMenuButtonClick}\n              isOpen={isOpen}\n            />\n            <ProtectedRoute path='/profile'\n              component={Profile}\n              loggedIn={loggedIn}\n              signOut={signOut}\n              infoUser={currentUser}\n              update={updateProfile}\n              closeAllPopups={closeAllPopups}\n              handleMenuButtonClick={handleMenuButtonClick}\n              isOpen={isOpen}\n              message={message}\n            />\n            <Route path=\"*\">\n              <NotFounded/>\n            </Route>\n            <Route>\n                {loggedIn ? <Redirect to=\"/movies\" /> : <Redirect to=\"/\" />}\n            </Route>\n          </Switch>\n        </CurrentMoviesContext.Provider>\n      </CurrentUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { BrowserRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}